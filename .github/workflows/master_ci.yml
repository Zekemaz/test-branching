name: MainCI

on:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches:
      - main
  workflow_run:
    workflows: [DevelopCI]
    types:
      - completed
    branches:
      - main


# https://stackoverflow.com/questions/62750603/github-actions-trigger-another-action-after-one-action-is-completed#:~:text=2.-,Separate,-workflow%2C%20using%20the
jobs:
  update_pull_request_from_dev:
    runs-on: ubuntu-latest
    name: Check if feature is still compliant with requirements on main
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: run test
        run: |
          echo "running test on main if DevelopCI has passed"
          if [ $(git branch -r --merged origin/develop | grep origin/feature/${GITHUB_HEAD_REF##*/}) != origin/feature/${GITHUB_HEAD_REF##*/} && $(git branch -r --merged origin/develop | grep origin/feature/${GITHUB_HEAD_REF##*/}) != origin/feature/]; then
            echo "The current pull request is not allowed as the feature/${GITHUB_HEAD_REF##*/} has not been merge into develop yet"
            exit 1
          else
            echo "The branch feature/${GITHUB_HEAD_REF##*/} is allowed to be merged into master since it has already been merged into develop"
            exit 0
          fi

  check_pull_request:
    runs-on: ubuntu-latest
    name: Check if feature has been merge onto the develop branch
    steps:
      - name: Fetch all branches
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get merged branches
        run: |
          if [ $(git branch -r --merged origin/develop | grep origin/feature/${GITHUB_HEAD_REF##*/}) != origin/feature/${GITHUB_HEAD_REF##*/} && $(git branch -r --merged origin/develop | grep origin/feature/${GITHUB_HEAD_REF##*/}) != origin/feature/]; then
            echo "The current pull request is not allowed as the feature/${GITHUB_HEAD_REF##*/} has not been merge into develop yet"
            exit 1
          else
            echo "The branch feature/${GITHUB_HEAD_REF##*/} is allowed to be merged into master since it has already been merged into develop"
            exit 0
          fi

#  echo "1" ${GITHUB_HEAD_REF##*/}
#  echo "2" ${GITHUB_REF##*/}
#  echo "3" $(git branch -r --merged origin/develop origin/feature/${GITHUB_HEAD_REF##*/})
#  echo "4" $(git branch -r --merged origin/develop)
#  echo "5" origin/feature/${GITHUB_HEAD_REF##*/}
#  echo "6" $(git branch -r --no-merged origin/develop)
#  echo "7" $(git branch -r --no-merged origin/develop | grep origin/feature/${GITHUB_HEAD_REF##*/})
#  if [ $(git branch -r --no-merged origin/develop | grep origin/feature/${GITHUB_HEAD_REF##*/}) == origin/feature/${GITHUB_HEAD_REF##*/} ]; then
#  echo "branche trouvée donc pas bon";
#  fi
#  if [ $(git branch -r --no-merged origin/develop | grep origin/feature/${GITHUB_HEAD_REF##*/}) != origin/feature/${GITHUB_HEAD_REF##*/} ]; then
#  echo "branche pas trouvée donc OK";
#  fi