name: API CI

#on: push
#on: [push, XXX]
on:
  push:
#    branches:
#      - main
  pull_request:
    branches:
      - main

# When a PR from a feature branch towards the test branch is created :
#     Execute tests on feature branch
#     If tests have passed, merge the feature into the test branch
#     Execute the remaining tests on the test branch
#
#
# When a PR from a feature branch towards the main branch is created :
#     Verify if the last commit of the feature branch has been merged onto the test branch
#     If it has, then it means the tests have been well executed and have passed
#     If it has not, refuse the PR (message saying a PR towards the test branch is needed)
#     Verify that the feature branch is also up-to-date with the main branch's content.
#     If it is not, refuse the PR and send a message for a rebase
#
#


# get last commit from feature branch
# look through test branch's commits to find the feature branch last commit
# git fetch --all to get all branches history
# git log <branch-name> (feature) -> copy last commit hash
# git log <branch-name> (test) -> check that feature hash = last test hash


# bloquer l'acceptation de la PR if no conditions are met
jobs:
  check_pr:
    runs-on: ubuntu-latest
    name: Check if feature has been merge onto the develop branch

    steps:
      # Checkout the branch
      - name: fetch it all
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
#        run: |
#          git config user.name "GitHub Actions Bot"
#          git config user.email "<>"

      - name: get merged branches
        run: |
          echo "branch_name=$(git branch -r --merged origin/develop})" >> $GITHUB_ENV
          echo ${{ env.branch_name }}
#          if [ "${{ env.branch_name }}" != "origin/feature/third-feature" ]; then
#            echo "PR NOT ALLOWED"
#            exit 1
#          else
#            echo "PR ALLOWED"
#            echo "${{ env.branch_name }}"
#            exit 0
#          fi
#          echo $(git branch -r --merged origin/develop)
#          hello=$(git branch -r --merged origin/develop origin/feature/${GITHUB_REF##*/})
#          echo $hello

      - name: Run command
        run: |
          echo YIPIKA√è YAY MOTHERFUCKER
#        run: echo $(git branch -r --merged origin/develop origin/feature/fifth-feature) # argument for feature name ?
#        run: /test.sh
#          echo ${github.head_ref}
#          echo ${GITHUB_REF##*/}
#          echo $(git branch -r --merged origin/develop origin/feature/${GITHUB_REF##*/})
#          git branch -r --merged origin/develop ${github.head_ref} | grep "origin"
#        run: if [ github.head_red == $commandOutput ]; then
#
#        with:
#          default-branch: main