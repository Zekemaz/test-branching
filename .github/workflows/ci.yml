name: API CI

#on: push
#on: [push, XXX]
on:
  pull_request:
    branches:
      - main

# When a PR from a feature branch towards the test branch is created :
#     Execute tests on feature branch
#     If tests have passed, merge the feature into the test branch
#     Execute the remaining tests on the test branch
#
#
# When a PR from a feature branch towards the main branch is created :
#     Verify if the last commit of the feature branch has been merged onto the test branch
#     If it has, then it means the tests have been well executed and have passed
#     If it has not, refuse the PR (message saying a PR towards the test branch is needed)
#     Verify that the feature branch is also up-to-date with the main branch's content.
#     If it is not, refuse the PR and send a message for a rebase
#
#

jobs:
  check_pr:
    runs-on: ubuntu-latest
    name: Check if feature has been merge onto the develop branch

    steps:
      # Checkout the branch
      - name: fetch it all
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: get merged branches
        run: |
          if [ $(git branch -r --merged origin/develop origin/feature/third-feature) != "origin/feature/third-feature" ]; then
            echo "The current Pull Request is not allowed as the feature/${GITHUB_REF##*/} has not been merge into develop yet"
            exit 1
          else
            echo "The branch feature/${GITHUB_REF##*/} is allowed to be merged into master"
            exit 0
          fi
        with:
          default-branch: main